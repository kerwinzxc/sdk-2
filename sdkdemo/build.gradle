apply plugin: 'com.android.application'
//apply from: "../SDKProject/src/main/config/productFlavorsConfig.gradle"
apply from: "../YunSDKLib/config/productFlavorsConfig.gradle"
android {
    compileSdkVersion 28
    flavorDimensions 'api'

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    defaultConfig {
//        applicationId "com.etsdk.sdkdemo"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            // 批量打包
//            android.applicationVariants.all { variant ->
//                variant.outputs.all {
//                    outputFileName = "YunSDK_${variant.productFlavors[0].name}_v${defaultConfig.versionName}_${defaultConfig.versionCode}_${releaseTime()}.apk"
//                    String outputsPath = outputFile.parent.substring(0, outputFile.parent.indexOf("apk"));
//                    //outputs+渠道名 组成的目录
//                    File newOutfileDir = new File(outputsPath, "${variant.productFlavors[0].name}");
//                    if (newOutfileDir.exists()) {
//                        newO9utfileDir.delete();
//                    }
//                    newOutfileDir.mkdirs();
//                }
//            }

            // 批量打包
//            applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    def outputFile = output.outputFile
//                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                        //输出apk名称为：渠道名_版本名_时间.apk
//                        def fileName = "${variant.productFlavors[0].name}_v${defaultConfig.versionName}_${defaultConfig.versionCode}_${releaseTime()}.apk"
//                        String outputsPath = outputFile.parent.substring(0, outputFile.parent.indexOf("apk"));
//                        //outputs+渠道名 组成的目录
//                        File newOutfileDir = new File(outputsPath, "${variant.productFlavors[0].name}");
//                        if (newOutfileDir.exists()) {
//                            newOutfileDir.delete();
//                        }
//                        newOutfileDir.mkdirs();
//                        //apk位置 outputs/渠道名/xxx.apk
//                        output.outputFile = new File(newOutfileDir, fileName);
//                        String channelName = "${variant.productFlavors[0].name}";
//
//                    }
//                }
//            }

        }
        debug {
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    //签名信息
    signingConfigs {
        debug {
            storeFile file("key/yunapp_key.jks")
            storePassword "yunapp"
            keyAlias "yunzhao"
            keyPassword "yunapp"
            v2SigningEnabled false
        }
    }
    //移除lint检测的error
    lintOptions {
        abortOnError false
    }
}

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation project(':SDKProject')
//    在打包aar的时候要注释（SDKProject）这个modle引用，开放多榘道，两个都有多渠道的话他们就会冲突
//    引用时去（SDKProject）这个modle的build文件里边找到多渠道注释掉
//    implementation project(':YunSDKLib')
//    implementation files('libs/YunSDK-release-1.1.jar')
//    implementation(name:'SDKProject-release', ext:'aar')

    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.google.code.gson:gson-parent:2.8.2'
    implementation 'com.kymjs.rxvolley:rxvolley:1.1.4'
    implementation 'com.kymjs.rxvolley:okhttp:1.1.4'
}